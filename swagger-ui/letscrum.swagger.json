{
  "swagger": "2.0",
  "info": {
    "title": "api/letscrum/v1/letscrum.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Letscrum"
    },
    {
      "name": "Org"
    },
    {
      "name": "Project"
    },
    {
      "name": "Sprint"
    },
    {
      "name": "Item"
    },
    {
      "name": "Epic"
    },
    {
      "name": "Feature"
    },
    {
      "name": "WorkItem"
    },
    {
      "name": "Task"
    },
    {
      "name": "User"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/orgs": {
      "get": {
        "operationId": "Org_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOrgResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Org"
        ]
      },
      "post": {
        "operationId": "Org_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateOrgResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateOrgRequest"
            }
          }
        ],
        "tags": [
          "Org"
        ]
      }
    },
    "/api/v1/orgs/{orgId}": {
      "get": {
        "operationId": "Org_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrgResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Org"
        ]
      },
      "put": {
        "operationId": "Org_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrgResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrgUpdateBody"
            }
          }
        ],
        "tags": [
          "Org"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/members": {
      "get": {
        "operationId": "Org_ListMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Org"
        ]
      },
      "post": {
        "operationId": "Org_AddMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrgAddMembersBody"
            }
          }
        ],
        "tags": [
          "Org"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/members/{userId}": {
      "delete": {
        "operationId": "Org_RemoveMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Org"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/members/{userId}/admin/{isAdmin}": {
      "get": {
        "operationId": "Org_SetAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "isAdmin",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "Org"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects": {
      "get": {
        "operationId": "Project_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Project"
        ]
      },
      "post": {
        "operationId": "Project_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectCreateBody"
            }
          }
        ],
        "tags": [
          "Project"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}": {
      "get": {
        "operationId": "Project_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Project"
        ]
      },
      "delete": {
        "operationId": "Project_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Project"
        ]
      },
      "put": {
        "operationId": "Project_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectUpdateBody"
            }
          }
        ],
        "tags": [
          "Project"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/epics": {
      "get": {
        "operationId": "Epic_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEpicResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Epic"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/features": {
      "get": {
        "operationId": "Feature_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFeatureResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Feature"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/items": {
      "get": {
        "operationId": "Item_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListItemResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Item"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/sprints": {
      "get": {
        "operationId": "Sprint_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSprintResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sprint"
        ]
      },
      "post": {
        "operationId": "Sprint_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSprintResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SprintCreateBody"
            }
          }
        ],
        "tags": [
          "Sprint"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/sprints/{sprintId}": {
      "get": {
        "operationId": "Sprint_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSprintResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sprint"
        ]
      },
      "delete": {
        "operationId": "Sprint_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteSprintResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sprint"
        ]
      },
      "put": {
        "operationId": "Sprint_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSprintResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SprintUpdateBody"
            }
          }
        ],
        "tags": [
          "Sprint"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/sprints/{sprintId}/members": {
      "put": {
        "operationId": "Sprint_UpdateMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSprintResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sprintId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SprintUpdateMembersBody"
            }
          }
        ],
        "tags": [
          "Sprint"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/workitems": {
      "get": {
        "operationId": "WorkItem_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListWorkItemResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sprintId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "WorkItem"
        ]
      },
      "post": {
        "operationId": "WorkItem_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateWorkItemResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemCreateBody"
            }
          }
        ],
        "tags": [
          "WorkItem"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/workitems/{workItemId}": {
      "get": {
        "operationId": "WorkItem_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetWorkItemResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "WorkItem"
        ]
      },
      "put": {
        "operationId": "WorkItem_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateWorkItemResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemUpdateBody"
            }
          }
        ],
        "tags": [
          "WorkItem"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/workitems/{workItemId}/assign": {
      "put": {
        "operationId": "WorkItem_Assign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateWorkItemResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemAssignBody"
            }
          }
        ],
        "tags": [
          "WorkItem"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/workitems/{workItemId}/status": {
      "put": {
        "operationId": "WorkItem_UpdateStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateWorkItemResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemUpdateStatusBody"
            }
          }
        ],
        "tags": [
          "WorkItem"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/workitems/{workItemId}/tasks": {
      "get": {
        "operationId": "Task_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "sprintId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Task"
        ]
      },
      "post": {
        "operationId": "Task_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskCreateBody"
            }
          }
        ],
        "tags": [
          "Task"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/workitems/{workItemId}/tasks/{taskId}": {
      "get": {
        "operationId": "Task_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Task"
        ]
      },
      "put": {
        "operationId": "Task_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskUpdateBody"
            }
          }
        ],
        "tags": [
          "Task"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/workitems/{workItemId}/tasks/{taskId}/assign": {
      "put": {
        "operationId": "Task_Assign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAssignBody"
            }
          }
        ],
        "tags": [
          "Task"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/workitems/{workItemId}/tasks/{taskId}/move": {
      "put": {
        "operationId": "Task_Move",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskMoveBody"
            }
          }
        ],
        "tags": [
          "Task"
        ]
      }
    },
    "/api/v1/orgs/{orgId}/projects/{projectId}/workitems/{workItemId}/tasks/{taskId}/status": {
      "put": {
        "operationId": "Task_UpdateStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskUpdateStatusBody"
            }
          }
        ],
        "tags": [
          "Task"
        ]
      }
    },
    "/api/v1/refresh/{refreshToken}": {
      "get": {
        "operationId": "Letscrum_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RefreshTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "refreshToken",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Letscrum"
        ]
      }
    },
    "/api/v1/signin": {
      "post": {
        "operationId": "Letscrum_SignIn",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SignInResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SignInRequest"
            }
          }
        ],
        "tags": [
          "Letscrum"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "operationId": "User_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "post": {
        "operationId": "User_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}": {
      "get": {
        "operationId": "User_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/password": {
      "put": {
        "operationId": "User_UpdatePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdatePasswordBody"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/reset_password": {
      "put": {
        "operationId": "User_ResetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserResetPasswordBody"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/super_admin/{isSuperAdmin}": {
      "put": {
        "operationId": "User_SetSuperAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "isSuperAdmin",
            "in": "path",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserSetSuperAdminBody"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/version": {
      "get": {
        "operationId": "Letscrum_GetVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Letscrum"
        ]
      }
    }
  },
  "definitions": {
    "OrgAddMembersBody": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OrgUser"
          }
        }
      }
    },
    "OrgUpdateBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ProjectCreateBody": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProjectMember"
          }
        }
      }
    },
    "ProjectUpdateBody": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProjectMember"
          }
        }
      }
    },
    "SprintCreateBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "int64"
        },
        "endDate": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SprintSprintStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "Past",
        "Current",
        "Future"
      ],
      "default": "UNKNOWN"
    },
    "SprintUpdateBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "int64"
        },
        "endDate": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SprintUpdateMembersBody": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SprintMember"
          }
        }
      }
    },
    "TaskAssignBody": {
      "type": "object",
      "properties": {
        "assignUserId": {
          "type": "string"
        }
      }
    },
    "TaskCreateBody": {
      "type": "object",
      "properties": {
        "sprintId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "TaskMoveBody": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/TaskTaskStatus"
        },
        "toWorkItemId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "TaskTaskStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ToDo",
        "InProgress",
        "Done",
        "Removed"
      ],
      "default": "UNKNOWN"
    },
    "TaskUpdateBody": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/TaskTaskStatus"
        },
        "assignUserId": {
          "type": "string"
        }
      }
    },
    "TaskUpdateStatusBody": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/TaskTaskStatus"
        }
      }
    },
    "UserResetPasswordBody": {
      "type": "object",
      "properties": {
        "newPassword": {
          "type": "string"
        }
      }
    },
    "UserSetSuperAdminBody": {
      "type": "object"
    },
    "UserUpdatePasswordBody": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "WorkItemAssignBody": {
      "type": "object",
      "properties": {
        "assignUserId": {
          "type": "string"
        }
      }
    },
    "WorkItemCreateBody": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1WorkItemType"
        },
        "title": {
          "type": "string"
        },
        "sprintId": {
          "type": "string"
        },
        "featureId": {
          "type": "string",
          "format": "int64"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "WorkItemUpdateBody": {
      "type": "object",
      "properties": {
        "sprintId": {
          "type": "string"
        },
        "taskId": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "$ref": "#/definitions/WorkItemWorkItemStatus"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "featureId": {
          "type": "string",
          "format": "int64"
        },
        "assignUserId": {
          "type": "string"
        }
      }
    },
    "WorkItemUpdateStatusBody": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/WorkItemWorkItemStatus"
        }
      }
    },
    "WorkItemWorkItemStatus": {
      "type": "string",
      "enum": [
        "New",
        "Approved",
        "Committed",
        "Done",
        "Removed"
      ],
      "default": "New"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateOrgRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1CreateOrgResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateProjectResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateSprintResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "item": {
          "$ref": "#/definitions/v1Sprint"
        }
      }
    },
    "v1CreateTaskResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "item": {
          "$ref": "#/definitions/v1Task"
        }
      }
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "isSuperAdmin": {
          "type": "boolean"
        }
      }
    },
    "v1CreateUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "item": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1CreateWorkItemResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "item": {
          "$ref": "#/definitions/v1WorkItem"
        }
      }
    },
    "v1DeleteProjectResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v1DeleteSprintResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v1Epic": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1Feature": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GetProjectResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/v1Project"
        }
      }
    },
    "v1GetSprintResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/v1Sprint"
        }
      }
    },
    "v1GetTaskResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/v1Task"
        }
      }
    },
    "v1GetUserResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1GetVersionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/v1Version"
        }
      }
    },
    "v1GetWorkItemResponse": {
      "type": "object",
      "properties": {
        "items": {
          "$ref": "#/definitions/v1WorkItem"
        }
      }
    },
    "v1Item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ListEpicResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Epic"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1ListFeatureResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Feature"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1ListItemResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Item"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1ListMemberResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1OrgMember"
          }
        }
      }
    },
    "v1ListOrgResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Org"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1ListProjectResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Project"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1ListSprintResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Sprint"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1ListTaskResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Task"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1ListUserResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1ListWorkItemResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WorkItem"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1Pagination"
        }
      }
    },
    "v1Org": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1OrgMember": {
      "type": "object",
      "properties": {
        "member": {
          "$ref": "#/definitions/v1User"
        },
        "isAdmin": {
          "type": "boolean"
        }
      }
    },
    "v1OrgResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/v1Org"
        }
      }
    },
    "v1OrgUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        }
      }
    },
    "v1Pagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdUser": {
          "$ref": "#/definitions/v1User"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProjectMember"
          }
        },
        "currentSprint": {
          "$ref": "#/definitions/v1Sprint"
        }
      }
    },
    "v1ProjectMember": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        }
      }
    },
    "v1RefreshTokenResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/v1Token"
        }
      }
    },
    "v1SignInRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "v1SignInResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1Sprint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "int64"
        },
        "endDate": {
          "type": "string",
          "format": "int64"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "$ref": "#/definitions/SprintSprintStatus"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SprintMember"
          }
        }
      }
    },
    "v1SprintMember": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "capacity": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v1Task": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "projectId": {
          "type": "string"
        },
        "sprintId": {
          "type": "string"
        },
        "workItemId": {
          "type": "string",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/TaskTaskStatus"
        },
        "assignUser": {
          "$ref": "#/definitions/v1User"
        },
        "createdUser": {
          "$ref": "#/definitions/v1User"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1Token": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "v1UpdateProjectResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v1UpdateSprintResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "item": {
          "$ref": "#/definitions/v1Sprint"
        }
      }
    },
    "v1UpdateTaskResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "item": {
          "$ref": "#/definitions/v1Task"
        }
      }
    },
    "v1UpdateUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "item": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1UpdateWorkItemResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "item": {
          "$ref": "#/definitions/v1WorkItem"
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "isSuperAdmin": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        },
        "token": {
          "$ref": "#/definitions/v1Token"
        }
      }
    },
    "v1Version": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "gitCommit": {
          "type": "string"
        },
        "buildDate": {
          "type": "string"
        },
        "goVersion": {
          "type": "string"
        }
      }
    },
    "v1WorkItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "projectId": {
          "type": "string"
        },
        "sprintId": {
          "type": "string"
        },
        "featureId": {
          "type": "string",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1WorkItemType"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/WorkItemWorkItemStatus"
        },
        "assignUser": {
          "$ref": "#/definitions/v1User"
        },
        "createdUser": {
          "$ref": "#/definitions/v1User"
        },
        "tasksUnknown": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Task"
          }
        },
        "tasksToDo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Task"
          }
        },
        "tasksInProgress": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Task"
          }
        },
        "tasksDone": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Task"
          }
        },
        "tasksRemoved": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Task"
          }
        },
        "tasksAll": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Task"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1WorkItemType": {
      "type": "string",
      "enum": [
        "Backlog",
        "Bug"
      ],
      "default": "Backlog"
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by bearer: bearer token",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
