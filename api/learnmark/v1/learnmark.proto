syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "api/general/v1/learnmark.proto";
import "api/user/v1/user.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/learnmark/learnmark/api/learnmark/v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  security_definitions: {
    security: {
      key: "bearer";
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by bearer: bearer token"
      }
    }
  }
  security: {
    security_requirement: {
      key: "bearer"
    }
  }
};

service Learnmark {
  rpc Version(google.protobuf.Empty) returns (learnmark.api.general.v1.VersionRes) {
    option (google.api.http) = {
      get: "/api/v1/version"
    };
  }

  rpc SignIn(learnmark.api.user.v1.SignInReq) returns (learnmark.api.user.v1.SignInRes) {
    option (google.api.http) = {
      post: "/api/v1/signin"
      body: "*"
    };
  }

  rpc RefreshToken(learnmark.api.user.v1.RefreshTokenReq) returns (learnmark.api.user.v1.RefreshTokenRes) {
    option (google.api.http) = {
      get: "/api/v1/refresh/{refresh_token}"
    };
  }
}
